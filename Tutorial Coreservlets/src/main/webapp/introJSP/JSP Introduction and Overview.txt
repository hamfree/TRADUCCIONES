
4 
Agenda 
* Understanding the need for JSP 
* Evaluating the benefits of JSP 
* Comparing JSP to other technologies 
* Avoiding JSP misconceptions 
* Understanding the JSP lifecycle 
* Installing JSP pages 
* Looking at JSP in the real world
----------------------------------------------------------------------------------- 
5 

The Need for JSP 
* With servlets, it is easy to 
  - Read form data 
  - Read HTTP request headers 
  - Set HTTP status codes and response headers 
  - Use cookies and session tracking 
  - Share data among servlets 
  - Remember data between requests 
  - Get fun, high-paying jobs 
* But, it sure is a pain to 
  - Use those println statements to generate HTML 
  - Maintain that HTML 
-----------------------------------------------------------------------------------
6 
The JSP Framework 
* Idea: 
  - Use regular HTML for most of page 
  - Mark servlet code with special tags 
  - Entire JSP page gets translated into a servlet (once), and 
    servlet is what actually gets invoked (for each request)
* Example:
   <!DOCTYPE ...> 
   <HTML> 
   <HEAD> 
   <TITLE>Order Confirmation</TITLE>
   <LINK REL=STYLESHEET 
         HREF="JSP-Styles.css" 
         TYPE="text/css">
   </HEAD>
   <BODY>
   <H2>Order Confirmation</H2>
   Thanks for ordering
   <I><%= request.getParameter("title") %></I>!
   </BODY></HTML> 
-----------------------------------------------------------------------------------
7 
Benefits of JSP 
* Although JSP technically can't do anything 
  servlets can't do, JSP makes it easier to: 
  - Write HTML 
  - Read and maintain the HTML 
* JSP makes it possible to: 
  - Use standard HTML tools such as DreamWeaver 
  - Have different members of your team do the HTML 
layout than do the Java programming 
* JSP encourages you to 
  - Separate the (Java) code that creates the content from the 
    (HTML) code that presents it 

-----------------------------------------------------------------------------------
Higher-Level Alternative: JSF 2 

* Servlets and JSP 
  - Well-established standard 
  - Used by google.com, ebay.com, walmart.com, and thousands 
    of other popular sites 
  - Relatively low level by today's standards 
  - Covered in this tutorial 
* JSF (JavaServer Faces) Version 2 
  - Now an official part of Java EE 6 
    + But runs in any recent Java-enabled server, including Tomcat 6+ 
  - Higher-level features: integrated Ajax support, field 
    validation, page templating, rich third-party componentlibraries, etc. Designed around the MVC approach. 
  - Not yet as widely used, but recommended for many or mostnew projects 
  - Covered at http://www.coreservlets.com/JSF-Tutorial/jsf2/ 
-----------------------------------------------------------------------------------
8 
Advantages of JSP OverCompeting Technologies 

* Versus ASP or ColdFusion 
  - Better language for dynamic part 
  - Portable to multiple servers and operating systems 
* Versus PHP 
  - Better language for dynamic part 
  - Better tool support 
* Versus pure servlets 
  - More convenient to create HTML 
  - Can use standard tools (e.g., DreamWeaver) 
  - Divide and conquer 
  - JSP programmers still need to know 
    servlet programming 
* Versus Velocity or WebMacro 
  - Standard 
* Versus client-side JavaScript (in browser) 
  - Capabilities mostly do not overlap with JSP, but 
    + You control server, not client 
    + Richer language 
* Versus server-side JavaScript(e.g., LiveWire, BroadVision) 
  - Richer language 
* Versus static HTML 
  - Dynamic features 
  - Adding dynamic features no longer "all or nothing" decision 
-----------------------------------------------------------------------------------
11 
Setting Up Your Environment 

* Set your CLASSPATH. Not. 
* Compile your code. Not. 
* Use packages to avoid name conflicts. Not. 
* Put JSP page in special directory. Not. 
  - Use the WebContent folder in Eclipse 
    + Same as for HTML, GIF, JPEG, CSS, etc. 
* Use special URLs to invoke JSP page. Not. 
  - Use same URLs as for HTML pages (except for file 
    extensions) 
* Caveats 
  - Previous rules about CLASSPATH, install dirs, etc., still 
    apply to regular Java classes used by a JSP page 

-----------------------------------------------------------------------------------
12 
Example 

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> 
<HTML> 
<HEAD> 
<TITLE>JSP Expressions</TITLE>
<META NAME="keywords"
      CONTENT="JSP,expressions,JavaServer Pages">
<META NAME="description"
      CONTENT="A quick example of JSP expressions.">
<LINK REL=STYLESHEET 
      HREF="JSP-Styles.css"
      TYPE="text/css">
</HEAD> 
<BODY> 
<H2>JSP Expressions</H2>
<UL> 
  <LI>Current time: <%= new java.util.Date() %>
  <LI>Server: <%= application.getServerInfo() %>
  <LI>Session ID: <%= session.getId() %>
  <LI>The <CODE>testParam</CODE> form parameter:
      <%= request.getParameter("testParam") %>
</UL>
</BODY></HTML> 

-----------------------------------------------------------------------------------
14 
Example: Result 

* If Eclipse project was 
  - jsp-scripting 
* And folder was 
  - WebContent 
* And file was 
  - Expressions.jsp 
* URL would be 
  - http://hostname/jsp-scripting/Expressions.jsp

(IMG)
 
-----------------------------------------------------------------------------------
15 
Most Common Misunderstanding - Forgetting JSP is Server-Side Technology 

* Very common question 
  - I can�t do such and such with HTML. 
Will JSP let me do it? 
* Why doesn�t this question make sense? 
  - JSP runs entirely on server 
  - It doesn't change content the client (browser) can handle 
* Similar questions 
  - How do I put a normal applet in a JSP page? 
    Answer: send an <applet...> tag to the client 
  - How do I put an image in a JSP page? 
    Answer: send an <img...> tag to the client 
  - How do I use JavaScript/Acrobat/Shockwave/Etc? 
    Answer: send the appropriate HTML tags 

-----------------------------------------------------------------------------------
2nd Most Common MisunderstandingTranslation/Request Time Confusion 

* What happens at page translation time? 
  - JSP constructs get translated into servlet code. 
* What happens at request time? 
  - Servlet code gets executed. No interpretation of JSP 
    occurs at request time. The original JSP page is totally
    ignored at request time; only the servlet that resulted from 
    it is used.  
* When does page translation occur? 
  - Typically, the first time JSP page is accessed after it is 
    modified. This should never happen to real user 
    (developers should test all JSP pages they install). 
  - Page translation does not occur for each request. 

-----------------------------------------------------------------------------------
16 

The JSP Lifecycle 

(Formato TABLA)
Request

Request

Request

Request

Request

Request#1 

#2 

#3 

#4 

#5 

#6 

JSP page 

Yes 

No 

No 

No 

Yes 

No 
translated into 
servlet 

Servlet 

Yes 

No 

No 

No 

Yes 

No 
compiled 

Servlet 

Yes 

No 

Yes 

No 

Yes 

No 
instantiated 
and loaded into 
server�s 
memory 

init (or 

Yes 

No 

Yes 

No 

Yes 

No 
equivalent)
called 

doGet (or 

Yes 

Yes 

Yes 

Yes 

Yes 

Yes 
equivalent)
called 

-----------------------------------------------------------------------------------
17 

Ten Most Popular Web Sites(Alexa.com, 2010)
 
1. Google 
   - Java (Web), C++ (indexing) 
2. Facebook 
   - PHP 
3. YouTube 
   - Flash, Python, Java 
4. Yahoo 
   - PHP and Java 
5. Microsoft Live.com 
   - .NET 
6. Baidu 
   - Unknown 
7. Wikipedia 
   - PHP 
8. Blogger 
   - Java 
9. MSN 
   - .NET 
10.Twitter 
   - Ruby on Rails, Scala, Java 

Fall 2010: Google reports over two billionWeb pages that use JSP (inurl:jsp).

-----------------------------------------------------------------------------------
18 
 Keywords in Job Postings
 
 (IMG)
 
-----------------------------------------------------------------------------------
19 
Keywords in Job Postings 

-----------------------------------------------------------------------------------
20 
JSP/Servlets in the Real World: Airlines
 
 * Delta Airlines 
 * United Airlines 
 * AirTran 
 * American Airlines          (IMG A LA DERECHA) 
 * British Airways 
 * KLM 
 * Air China 
 * Saudi Arabian Airlines 
 * Iceland Air 

-----------------------------------------------------------------------------------
21 
JSP/Servlets in the Real World:
Travel Sites 

 * Travelocity.com� Orbitz.com 
 * HotWire.com 
 * Hotels.com          (IMG A LA DERECHA)
 * CheapTickets.com 
 * National Car Rental 
 * Avis Car Rental 
 * EnterpriseCar Rental 
 * Hertz Car Rental 

-----------------------------------------------------------------------------------
22 
JSP/Servlets in the Real World:
Financial Services 

 * American Century
 * Vanguard� Fidelity
 * NY Stock Exchange
 * First USA Bank       (IMG A LA DERECHA)
 * Royal Bank ofScotland 
 * Banco Popular dePuerto Rico 
 * Bank of America 
 * China Construction Bank 

-----------------------------------------------------------------------------------
23 
JSP/Servlets in the Real World:
Retail 

 * Sears.com 
 * Walmart.com 
 * HomeDepot.com 
 * SamsClub.com 
 * Macys.com  
 * llbean.com         (IMG A LA DERECHA)
 * Kohls.com 
 * Ikea.com 
 * Target.com 
 * Longaberger.com 
 * Nike.com 
 * CircuitCity.com 

-----------------------------------------------------------------------------------
24 
JSP/Servlets in the Real World:
Entertainment 
 * WarnerBrothers.com 
 * Billboard.com 
 * E! (eonline.com)    (IMG A LA DERECHA) 
 * PBS.org 
 * Comcast 
 * games.atari.com 

-----------------------------------------------------------------------------------
25 
JSP/Servlets in the Real World:
Military and Federal Government 

 * DHS 
 * TSA 
 * FAA 
 * CIA 
 * NSA                  (IMG A LA DERECHA) 
 * GSA 
 * IRS 
 * Army 
 * Navy 
 * USPS 

-----------------------------------------------------------------------------------
Science and Research 

 * NSF 
 * UN Oceans 
 * diabetes.org 
 * fas.org 
 * dlse.org                  (IMG A LA DERECHA)
 * science.edu.sg 
 * gbif.net 
 * collegeboard.com 

-----------------------------------------------------------------------------------
JSP/Servlets in the Real World:
State, Local, International 

(IMG)

-----------------------------------------------------------------------------------
JSP/Servlets in the Real World:
Sports
 
 * Baltimore Orioles 
 * WashingtonRedskins 
 * WashingtonNationals             (IMG A LA DERECHA)
 * Major LeagueBaseball 
 * NHL.com 
 * Nascar.com 

-----------------------------------------------------------------------------------
JSP/Servlets in the Real World:
Search/Portals 
 
 * Most of Google 
 * All of Ebay 
 * netscape.com 
 * excite.com               (IMG A LA DERECHA)
 * dice.com 
 * hi5 
 * Paypal 
-----------------------------------------------------------------------------------
JSP/Servlets in the Real World:
Random Amusing 

(IMAGEN)

-----------------------------------------------------------------------------------
Summary
 
 * JSP is more convenient, not more powerful 
   - JSP makes it easier to create and maintain HTML, while 
still providing full access to servlet code 
 * JSP pages get translated into servlets 
   -  It is the servlets that run at request time 
   - Client does not see anything JSP-related 
 * You still need to understand servlets 
   - Understanding how JSP really works 
   - Servlet code called from JSP 
   - Knowing when servlets are better than JSP 
   - Mixing servlets and JSP 
 * Other technologies use similar approach, 
   - But aren't as portable and don't let you use Java for the "real code"
